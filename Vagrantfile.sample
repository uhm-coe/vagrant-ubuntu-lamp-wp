# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant Configuration DCDC 20161104 PAK
# Base generated from Vagrant 1.8.6 with modifications
# Set up for Ubuntu 16.04

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # config.vm.box = "ubuntu/xenial64"   # Ubuntu 16.04
  ### Uncomment a line above to choose the base box. ###

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.10.10"
  # config.vm.network "private_network", ip: "192.168.10.20"
  # config.vm.network "private_network", ip: "192.168.10.30"
  # config.vm.network "private_network", ip: "192.168.10.40"
  # config.vm.network "private_network", ip: "192.168.10.50"
  # config.vm.network "private_network", ip: "192.168.10.60"
  # config.vm.network "private_network", ip: "192.168.10.70"
  # config.vm.network "private_network", ip: "192.168.10.80"
  # config.vm.network "private_network", ip: "192.168.10.90"
  ### Uncomment a line above to choose an IP address for this VM. ###

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"
  ### Uncomment the line above to use a bridged network (i.e., this VM will be accessible on your local network). ###

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.synced_folder "www", "/var/www"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider :virtualbox do |vb|
    # vb.customize ["modifyvm", :id, "--memory", "256"]
    # vb.customize ["modifyvm", :id, "--memory", "512"]
    # vb.customize ["modifyvm", :id, "--memory", "1024"]
    # vb.customize ["modifyvm", :id, "--memory", "2048"]
    ### Uncomment a line above to set the vm memory size (in MiB) ###
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  # config.vm.provision "shell" do |s|
  #   s.path "scripts/lib/ubuntu_setup.sh"
  # end
  config.vm.provision :shell, path: "scripts/lib/ubuntu_setup.sh"
end
